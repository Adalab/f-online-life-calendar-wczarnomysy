{"version":3,"sources":["components/Home/Home.js","components/Form/Form.js","App.js","index.js"],"names":["Home","_this$props","this","props","dateList","resetData","react_default","a","createElement","react_router_dom","to","className","onClick","map","item","index","mood","key","class","React","Component","Form","handleDate","handleMood","handleMessage","handleMoodData","data","es","selected","onChange","htmlFor","id","type","value","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","newDate","Date","newMood","newMessage","bind","assertThisInitialized","saveData","savedData","JSON","parse","localStorage","getItem","savedCalendar","setState","dataList","console","log","date","event","moodValue","currentTarget","messageValue","moodData","message","prevState","concat","toConsumableArray","setItem","stringify","_this2","react_router","exact","path","render","components_Home_Home","components_Form_Form","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c33e2dd1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Home.scss\";\nimport { Link } from \"react-router-dom\";\n\nclass Home extends React.Component {\n  render() {\n    const {dateList, resetData} = this.props;\n    return (\n      <div>\n        <Link to=\"/editform\">\n          <button className=\"btn__mood\" onClick={resetData}>+</button>\n        </Link>\n        <div className=\"icons__cointainer\">    \n            {dateList.map((item, index) => \n              item.mood === \"smile\" ?\n                  (<div className=\"face__container\" key={index}>\n                   <i class=\"fas fa-smile smile\"></i>\n                  </div>\n                  ):(\n                    <div className=\"face__container\"  key={index}>\n                      <i class=\"fas fa-frown sad\"></i>\n                    </div>\n              ))\n            }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./Form.scss\";\nimport DatePicker from \"react-datepicker\";\nimport {Link} from 'react-router-dom';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass Form extends React.Component {\n  render() {\n    const{handleDate,handleMood,handleMessage,handleMoodData,mood,data,resetData}=this.props;\n    return (\n      <div>\n          <h2>Choose a date</h2>\n           <DatePicker\n                            selected={data}\n                            onChange={handleDate} \n            />\n          <h2>Please select your mood wisely</h2>\n          <form>\n          <label htmlFor=\"smile\">\n            <input id=\"smile\" type=\"radio\" value=\"smile\" onClick={handleMood}/>\n            :)\n          </label>\n          <label htmlFor=\"sad\">\n            <input id=\"sad\" type=\"radio\" value=\"sad\" onClick={handleMood}/>\n            :(\n          </label>\n          {mood === \"smile\" ?\n            <div className=\"comment__container\">\n              <label htmlFor=\"positive\">Share only good things!</label>\n              <input  id=\"positive\" type=\"text\" onChange={handleMessage}/>\n            </div>\n            :\n            \"\"\n          }\n          </form>\n         <Link to={\"/\"}>  \n          <button className=\"btn__save\" onClick={handleMoodData}>Save</button>\n        </Link>\n        <Link to={\"/\"}>\n          <button className=\"btn__cancel\" onClick={resetData}>Cancel</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Home from \"../src/components/Home/Home\";\nimport Form from \"../src/components/Form/Form\";\nimport { Route, Switch } from \"react-router-dom\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newDate: new Date (),\n      newMood: \"\",\n      newMessage: \"\",\n      dateList:[]\n    };\n  this.handleDate=this.handleDate.bind(this);\n  this.handleMood=this.handleMood.bind(this);\n  this.handleMessage=this.handleMessage.bind(this);\n  this.handleMoodData=this.handleMoodData.bind(this);\n  this.saveData=this.saveData.bind(this);\n  this.resetData=this.resetData.bind(this);\n  }\n\n  componentDidMount() {\n    const savedData = JSON.parse(localStorage.getItem(\"SavedDataArr\"));\n    const savedCalendar = savedData ? savedData : [];\n    this.setState({ dataList: savedCalendar });\n    console.log(savedData);\n  }\n  \n\n  componentDidUpdate() {\n    this.saveData()\n  }\n\n  handleDate(date) {\n    this.setState({\n      newDate: date\n    });\n  }\n\n  handleMood(event) {\n    const moodValue = event.currentTarget.value;\n    this.setState({\n      newMood: moodValue\n    });\n  }\n\n  handleMessage(event) {\n    const messageValue = event.currentTarget.value;\n    this.setState({\n      newMessage: messageValue\n    });\n  }\n\n  handleMoodData () {\n    const moodData = {\n    date: this.state.newDate,\n    mood: this.state.newMood,\n    message: this.state.newMessage\n    }\n    this.setState(prevState=>({\n      dateList: [...prevState.dateList, moodData]\n    }));\n  }\n\n  saveData () {\n    localStorage.setItem('savedDataArr', JSON.stringify(this.state.dateList));\n  }\n\n  resetData () {\n    this.setState({\n      newDate:\"\",\n      newMood:\"\",\n      newMessage:\"\"\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"app\">\n        <header>\n          <h1>How was your day?</h1>\n        </header>\n        <main>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <Home\n                  dateList={this.state.dateList}\n                  resetData={this.resetData}\n                />\n              )}\n            />\n            <Route\n              path=\"/editform\"\n              render={() => (\n                <Form\n                  handleDate={this.handleDate}\n                  handleMood={this.handleMood}\n                  handleMessage={this.handleMessage}\n                  handleMoodData={this.handleMoodData}\n                  mood={this.state.newMood}\n                  data={this.state.newDate}\n                />\n              )}\n            />\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}